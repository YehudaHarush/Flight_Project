name: Backend Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-ci:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flight_booking_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Get Repository
        uses: actions/checkout@v3

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Project Dependencies
        run: npm ci
        working-directory: ./backend

      - name: Setup Environment Variables for Test
        run: |
          echo "DB_TEST_USER=postgres" >> .env.test
          echo "DB_TEST_PASS=postgres" >> .env.test
          echo "DB_TEST_NAME=flight_booking_test" >> .env.test
          echo "DB_TEST_HOST=localhost" >> .env.test
          echo "DB_TEST_PORT=5432" >> .env.test
        working-directory: ./backend

      - name: Wait for Database to be Ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for DB connection...";
            sleep 3;
          done
        env:
          PGPASSWORD: postgres

      - name: Ensure Test DB Exists
        run: |
          psql -h localhost -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'flight_booking_test'" | grep -q 1 || \
          psql -h localhost -U postgres -c "CREATE DATABASE flight_booking_test"
        env:
          PGPASSWORD: postgres

      - name: Apply DB Migrations
        run: npx sequelize-cli db:migrate --env test
        working-directory: ./backend

      - name: Execute Unit Tests
        run: npm test -- --runInBand --detectOpenHandles --verbose
        working-directory: ./backend
        env:
          NODE_ENV: test
